v2018.9.20
实例生命周期	beforeCreate/beforeMount/beforeUpdate/beforeDestroy
created()	==>	//创建				前/后
mounted()	==>	//安装or载入		前/后
updated()	==>	//更新			前/后
destroyed()	==>	//销毁			前/后

component	==>	//指令集/组件
computed	==>	//计算属性		get, set
methods		==>	//方法
watch		==>	//监听

v-if		==>	//true,false 真假		更高的切换开销		==> 频繁
v-show		==>	//显示 has DOM		更高的初始渲染开销	==> 条件很少改变
v-for		==>	//[数组]:（item,index） in/of items	{对象}:(vale,key,index) in/of object
v-model		==>	//表单双向实时变化
v-bind:属性=""	==>	//绑定:属性 参数
v-bing:class	==>	//{ active: true } 表达式可以放在 html 上，或者 js 内。比三元运算符简单 数组式
v-on:事件	==>	//绑定事件监听器，click,submit
v-if		==>	//条件渲染 显示	no DOM
v-else		==>	//紧跟v-if之后
v-else-if	==>	//紧跟v-if之后
v-once		==>	//一次性插值，不会更新
v-html		==>	//输出html


Vue.set(object, key, val)	动态赋值、设置（单）
vm.$set(object, key, val)

Object.assign()		//创建新属性（多）
_.extend()


修饰器			//会改变原来的数据，而不是返回一个新数据
push()			//在结尾增加一条或多条数据
pop()			//删除最后一条数据
shift()			//删除第一条数据，并返回这条数据
unshift()		//在开始增加一条或多条数据，并返回数组长度
splice()		//向/从数组中添加/删除项目，然后返回被删除的项目。
sort()			//对数组的元素进行排序。
reverse()		//颠倒数组中元素的顺序。

返回一个新的数组
filter()     //返回条件为真的数据
concat()    //连接两个或多个数组
slice()    //从已有的数组中返回选定的元素。